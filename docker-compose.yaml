version: '3.6'
services:
  telegraf:
    image: telegraf:1.28.2
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    depends_on:
      - influxdb
      - mongo
      - proxy
      - elasticsearch
    links:
      - influxdb
    ports:
      - '127.0.0.1:8125:8125/udp'
    networks:
      - telegraf-influx
      - telegraf-mongo
      - telegraf-nginx
      - telegraf-elastic
      - go-telegraf

  influxdb:
    image: influxdb:1.8-alpine
    env_file: configuration.env
    ports:
      - '127.0.0.1:8086:8086'
    volumes:
      - ./:/imports
      - influxdb_data:/var/lib/influxdb
    networks:
      - world
      - telegraf-influx
      - grafana-influx
      - go-influx

  grafana:
    image: grafana/grafana:8.0.2
    depends_on:
      - influxdb
    env_file: configuration.env
    links:
      - influxdb
    ports:
      - '127.0.0.1:3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
      - ./grafana/dashboards/:/var/lib/grafana/dashboards/
    networks:
      - world
      - grafana-influx


  proxy:
    image: nginx
    volumes:
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/conf.d/default.conf
        read_only: true
    ports:
      - 8080:80
    depends_on:
      - go-server
    networks:
      - world
      - proxy-go
      - telegraf-nginx

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.0
    container_name: elasticsearch
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    healthcheck:
      test: [ "CMD", "curl", "-s", "-f", "http://localhost:9200/_cat/health" ]
      interval: 3s
      timeout: 3s
      retries: 80
    ports:
      - 9200:9200
    networks:
      - world
      - go-elastic
      - telegraf-elastic

  mongo:
    image: mongo
    restart: always
    healthcheck:
      test: [ "CMD","mongosh", "--eval", "db.adminCommand('ping')" ]
      interval: 5s
      timeout: 5s
      retries: 3
      start_period: 5s
    ports:
      - 27017:27017
    networks:
      - world
      - go-mongo
      - telegraf-mongo


  go-server:
    build:
      context: ./go-app
      dockerfile: ./Dockerfile
    environment:
      ADDRESS: "0.0.0.0:8081"
      MONGODB_URL: "mongodb://mongo:27017/"
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
    depends_on:
      elasticsearch:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - proxy-go
      - go-mongo
      - go-elastic
      - go-telegraf
      - go-influx


networks:
  world:
  telegraf-influx:
    internal: true
  grafana-influx:
    internal: true
  proxy-go:
    internal: true
  go-mongo:
    internal: true
  telegraf-mongo:
    internal: true
  go-elastic:
    internal: true
  go-telegraf:
    internal: true
  go-influx:
    internal: true
  telegraf-elastic:
    internal: true
  telegraf-nginx:
    internal: true


volumes:
  grafana_data: { }
  influxdb_data: { }
